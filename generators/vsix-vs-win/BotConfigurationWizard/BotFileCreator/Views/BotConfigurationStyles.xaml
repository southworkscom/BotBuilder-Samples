<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vs_shell="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0">

    <Style x:Key="grid" TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Thin"/>
    </Style>

    <Style x:Key="title" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Grid.Row" Value="1"/>
        <Setter Property="Grid.ColumnSpan" Value="4"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Margin" Value="5,10,0,20"/>
    </Style>

    <Style x:Key="botNameTextBox" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}" >
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="250" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="5" />
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="MaxLength" Value="70"/>
        <Setter Property="FontWeight" Value="Thin"/>
    </Style>

    <Style x:Key="description" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="leftMenu" TargetType="Menu">
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Grid.Row" Value="2"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="Grid.RowSpan" Value="4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>

    <Style x:Key="menuItem" TargetType="MenuItem">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
    </Style>

    <Style x:Key="separator" TargetType="Rectangle">
        <Setter Property="Grid.Column" Value="3"/>
        <Setter Property="Grid.Row" Value="2"/>
        <Setter Property="Grid.RowSpan" Value="5"/>
        <Setter Property="Stroke" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.PageSideBarExpanderSeparatorBrushKey}}"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Width"  Value="1" />
        <Setter Property="Margin" Value="2,0,0,50"/>
    </Style>

    <Style x:Key="botPanel" TargetType="StackPanel">
        <Setter Property="Grid.Column" Value="3"/>
        <Setter Property="Grid.Row" Value="2"/>
        <Setter Property="Grid.ColumnSpan" Value="3"/>
        <Setter Property="Grid.RowSpan" Value="4"/>
        <Setter Property="Margin" Value="20,-5"/>
    </Style>

    <Style x:Key="moduleTitle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="5,5,5,-5"/>
    </Style>

    <Style x:Key="textForm" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Margin" Value="5,5,5,7"/>
    </Style>

    <Style x:Key="textBoxForm" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="5,-5 ,5 ,5"/>
    </Style>

    <Style x:Key="nameTextBoxForm" TargetType="TextBox" BasedOn="{StaticResource textBoxForm}">
        <Setter Property="Width" Value="200"/>
    </Style>

    <Style x:Key="secretKeyPanel" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="encryptTextBox" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="280"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="FontSize" Value="11"/>
    </Style>

    <Style x:Key="encryptNote" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" >
        <Setter Property="Margin" Value="5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="copyButton" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.CommandBarMenuGroupHeaderLinkTextBrushKey}}"/>
    </Style>

    <Style x:Key="encryptCheckBox" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
        <Setter Property="Margin" Value="5,10,10,10"/>
    </Style>

    <Style x:Key="downBar" TargetType="Canvas">
        <Setter Property="Grid.Column"  Value="0"/>
        <Setter Property="Grid.Row" Value="6"/>
        <Setter Property="Grid.RowSpan" Value="2"/>
        <Setter Property="Grid.ColumnSpan" Value="7"/>
        <Setter Property="Height" Value="60" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.BrandedUIBackgroundBrushKey}}"/>
    </Style>

    <Style x:Key="panelButtons" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Canvas.Right" Value="15"/>
        <Setter Property="Canvas.Bottom" Value="15"/>
    </Style>

    <Style x:Key="listView" TargetType="ListView">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.BrandedUIBackgroundBrushKey}}"/>
    </Style>

    <Style x:Key="listViewItem" TargetType="ListViewItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid>
                        <Border x:Name="outerBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" SnapsToDevicePixels="true">
                            <Grid>
                                <Border x:Name="innerBorder" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" />
                                <GridViewRowPresenter Margin="0,2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowButtonHoverActiveBorderBrushKey}}"/>
                            <Setter TargetName="innerBorder" Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowButtonHoverActiveBorderBrushKey}}"/>
                            <Setter TargetName="innerBorder" Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ComboBoxItemMouseOverBackgroundBrushKey}}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="headerContainerStyle" TargetType="GridViewColumnHeader">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.SystemButtonTextBrushKey}}"/>
        <Setter Property="BorderBrush" Value="DarkBlue"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Margin" Value="5,5,0,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="downBarButton" TargetType="Button">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.SystemButtonTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.SystemButtonShadowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.StartPageButtonBorderBrushKey}}"/>
            <Setter Property="Padding" Value="8,4" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="75" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
        </Style.Setters>
    </Style>

    <ControlTemplate x:Key="ButtonsTemplate" TargetType="Button">
        <Border x:Name="border" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1">
            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowButtonHoverActiveBorderBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TextButtonTemplate" TargetType="Button">
        <TextBlock x:Name="TextBlock">
            <ContentPresenter Content="{TemplateBinding  Content}" ContentTemplate="{TemplateBinding  ContentTemplate}"/>
        </TextBlock>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="TextBlock" Property="TextBlock.TextDecorations" Value="Underline"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="endpointButton" TargetType="Button">
        <Setter Property="Margin" Value="10,5"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.CommandBarMenuGroupHeaderLinkTextBrushKey}}"/>
    </Style>

</ResourceDictionary>